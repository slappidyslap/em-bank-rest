openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /api/v1/auth/signup:
    post:
      tags:
        - auth-controller
      operationId: signup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignupUserRequest"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                type: object
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            'application/json':
              schema:
                type: object
        "503":
          description: Service Unavailable
          content:
            'application/json':
              schema:
                type: object
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                type: object
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/GetCreatePatchUserResponse"
  /api/v1/auth/refresh:
    post:
      tags:
        - auth-controller
      operationId: refresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTokensRequest"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                type: object
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            'application/json':
              schema:
                type: object
        "503":
          description: Service Unavailable
          content:
            'application/json':
              schema:
                type: object
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                type: object
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/AuthenticateRefreshUserResponse"
  /api/v1/auth/login:
    post:
      tags:
        - auth-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthenticateRequest"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                type: object
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            'application/json':
              schema:
                type: object
        "503":
          description: Service Unavailable
          content:
            'application/json':
              schema:
                type: object
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                type: object
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/AuthenticateRefreshUserResponse"
  /api/v1/users/me:
    get:
      tags:
        - user-controller
      operationId: getUserById
      responses:
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                type: object
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            'application/json':
              schema:
                type: object
        "503":
          description: Service Unavailable
          content:
            'application/json':
              schema:
                type: object
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                type: object
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/GetCreatePatchUserResponse"
    patch:
      tags:
        - user-controller
      operationId: updateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchUserRequest"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                type: object
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            'application/json':
              schema:
                type: object
        "503":
          description: Service Unavailable
          content:
            'application/json':
              schema:
                type: object
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                type: object
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/GetCreatePatchUserResponse"
components:
  schemas:
    SignupUserRequest:
      type: object
      properties:
        fullName:
          type: string
          minLength: 1
        email:
          type: string
          format: email
          minLength: 1
        password:
          type: string
          minLength: 1
      required:
        - email
        - fullName
        - password
    UpdateTokensRequest:
      type: object
      properties:
        refreshToken:
          type: string
    AuthenticateRefreshUserResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    AuthenticateRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
        password:
          type: string
          minLength: 1
      required:
        - email
        - password
    CardSpecification:
      type: object
      properties:
        status:
          type: string
        userId:
          type: integer
          format: int64
    UserSpecification:
      type: object
      properties:
        email:
          type: string
        fullName:
          type: string
        id:
          type: integer
          format: int64
        role:
          type: string
          enum:
            - USER
            - ADMIN
